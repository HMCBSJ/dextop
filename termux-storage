#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="02-07-2020"

# usage #

while (($#))
do
        case "${1}" in
                -h|--help)
                        echo
                        echo -e "Usage: ${script} [OPTION]"
                        echo
                        echo -e "Options:"
                        echo
                        echo -e "-h, --help \t Show help and usage information."
                        echo
                        echo -e "'${script}' [ Version ${version} ]"
                        echo

                        exit
                ;;

                *)
                        echo
                        echo "Usage: ${script} [OPTION]"
                        echo
                        echo -e "${script}: Unknown option '${1}'"
                        echo -e "Type './${script} --help' for help and usage information."
                        echo

                        exit 1
                ;;
        esac

        shift
done

# variables #

# verify termux storage directory existence

if [ -d "${HOME}"/storage ]
then
	# exists - proceed with setup

	console.scs "Storage directory detected under"
	console.scs "${HOME}"
	echo

	console.fwd "Continuing..."
	echo
else
	# does not exist - enable storage permissions: requires user touch input

	console.wrn "Termux requires user permission to access storage on this device..."
	echo

	console.fwd "Both internal and external storage are made available:"
	echo

	console.inf "Allowing access greatly benefits the desktop experience"
	console.inf "and will make the device's storage visble and accessible"
	console.inf "through your desktop session and file manager."
	echo

	console.usr "Select 'Allow' or 'Deny' when prompted"
	console.usr "to enable or disable storage access permission."
	echo

	console.countdown "Permissions dialog in:" 3
	echo

	# trigger storage permissions dialog

	# am broadcast	--user 0												\
	#				--es com.termux.app.reload_style storage				\
	#				-a com.termux.app.reload_style com.termux > /dev/null

	termux-setup-storage

	# wait 5 seconds to permit storage permissions approval

	console.countdown "Waiting" 3
	echo
fi

# remove termux storage link defaults

rm -rf "${HOME}"/storage

# handle storage mount location

[ -d "${SETUP_DIRECTORY}"/storage ] && rm -rf "${SETUP_DIRECTORY}"/storage

mkdir -p "${SETUP_DIRECTORY}"/storage || :

# create new symbolic links for bind mounts

[ ! -f "${SETUP_DIRECTORY}"/storage/internal ]							&& \
	ln -s -f /storage/emulated/0 "${SETUP_DIRECTORY}"/storage/internal 	|| :

# use regular expression to match label UUID 'XXXX-XXXX'
# store external devce labels in array for later retrieval and linking

find_storage=$(ls /storage | sed -r '/[A0-Z9][-][A0-Z9]/!d')
external_storage=( ${find_storage} )

[ ! -d "${SETUP_DIRECTORY}"/storage/external ] && mkdir -p "${SETUP_DIRECTORY}"/storage/external

for storage in "${external_storage[@]}"
do
	if [ ! -z "${external_storage}" ]
	then
		console.scs "External storage detected [ UUID: ${external_storage} ]."
		echo

		console.fwd "Linking..."
		echo

		if [ ! -f "${SETUP_DIRECTORY}"/storage/external ]
		then
			ln -s -f /storage/"${storage}" "${SETUP_DIRECTORY}"/storage/external/"${storage}"
		fi

		console.wait 1
	else
		console.err "No extrernal storage media detected."
		echo

		console.fwd "Continuing..."
		echo
	fi
done
