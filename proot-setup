#!/bin/bash

# dependencies #

curl -sL get.cnsl.app/console > "${PREFIX}"/bin/console && source "${PREFIX}"/bin/console
curl -sL get.dxtp.app/globals > "${PREFIX}"/bin/globals && source "${PREFIX}"/bin/globals

# script #

script=$(basename -- "${BASH_SOURCE[0]}")

# version #

version="02-07-2020"

# usage #

while (($#))
do
        case "${1}" in
                -h|--help)
                        echo
                        echo -e "Usage: ${script} [OPTION]"
                        echo
                        echo -e "Options:"
                        echo
                        echo -e "-h, --help \t Show help and usage information."
                        echo
                        echo -e "'${script}' [ Version ${version} ]"
                        echo

                        exit
                ;;

                *)
                        echo
                        echo "Usage: ${script} [OPTION]"
                        echo
                        echo -e "${script}: Unknown option '${1}'"
                        echo -e "Type './${script} --help' for help and usage information."
                        echo

                        exit 1
                ;;
        esac

        shift
done

# variables #

# create self-terminating script file
# execute on first login to complete proot setup
# terminate if checkpoint is reached

# write automatic setup transition [ termux >>> [ proot ] ]

cat << 'FILE' ->> "${ROOT_DIRECTORY}"/root/.profile

bash /root/proot-setup
FILE

# write proot-setup

cat << 'FILE' ->> "${ROOT_DIRECTORY}"/root/proot-setup

#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# variables #

script=$(basename -- "${BASH_SOURCE[0]}")

# download #

console.fwd "Initializing..."
echo

console.download get.dxtp.app "${BINARIES_DIRECTORY}" proot-download

# setup #

# welcome message

console.run "${BINARIES_DIRECTORY}"/proot-message

# setup expansion to default system + documentation

"${BINARIES_DIRECTORY}"/proot-expand

# setup proot package requirements

"${BINARIES_DIRECTORY}"/proot-packages

# setup proot user

"${BINARIES_DIRECTORY}"/proot-user "${first_name}" "${last_name}"

# setup proot user superuser privileges

"${BINARIES_DIRECTORY}"/proot-superuser "${first_name}" "${last_name}"

# setup proot environment files

"${BINARIES_DIRECTORY}"/proot-environment

# setup proot login messages

"${BINARIES_DIRECTORY}"/proot-welcome

# setup proot aliased commands

"${BINARIES_DIRECTORY}"/proot-aliases

# setup proot vnc configurations

"${BINARIES_DIRECTORY}"/vnc-setup

# setup proot additional applications

"${BINARIES_DIRECTORY}"/proot-applications

# setup proot initial login configuration steps

"${BINARIES_DIRECTORY}"/proot-configuration

# setup checkpoint #

"${BINARIES_DIRECTORY}"/proot-checkpoint

# setup cleanup #

"${BINARIES_DIRECTORY}"/proot-clean
FILE
