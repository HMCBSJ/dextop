#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# /etc/os-release: source distribution codename variables (e.g. $NAME)

source /etc/os-release

# usage #

# variables #

script=$(basename -- "${BASH_SOURCE[0]}")

# initial prompt clear #

clear

PORT="590${DISPLAY:1}"

vnc () {
	console.silence "
					vncserver									\
							-SecurityTypes none					\
							-localhost yes						\
							-depth 32							\
							-cleanstale							\
							-name $NAME							\
							-geometry ${GEOMETRY} ${DISPLAY}"

					# 'vncserver' uses $DISPLAY instead of $PORT

	console.fwd "Starting display server..."
	echo

	console.inf "Format.......: ${format}"
	console.inf "Resolution...: ${GEOMETRY}"
	console.inf "Port.........: ${PORT}"
	echo

	# make selection available for automatic start
	
	# verify user id - do not write to root

	if [[ $(id -u) -ne 0 ]]
	then
		# integer check: do not write non numerical values to file
		
		if [[ "${selection}" =~ ^[0-9]+$ ]]
		then
				echo "${selection}" > /home/$(id -u -n)/.vnc/selection
		fi
	fi

	# start android vnc intent
	# and force-stop existing outputs
	# before intent launch
	
	# am start								\
	#		-d vnc://${LOCALHOST}:${PORT}	\
	#		-S application/activity"
	
	console.silence "am start -d vnc://${LOCALHOST}:${PORT} -S ${VNC}"
}

print_resolutions() {
	console.ipt "Enter the selection to start the display server with"
	console.ipt "or type 'c' to enter a custom display format: "
	echo
	
	# list supported display resolutions
	
	monitors=(
		VGA                      640     480
		WVGA                     768     480
		SVGA                     800     600
		FWVGA                    854     480
		qHD                      960     540
		DVGA                     960     640
		WSVGA                    1024    576
		WSVGA                    1024    600
		XGA                      1024    768
		XGA+                     1152    864
		HD                       1280    720
		WXGA                     1366    768
		WXGA+                    1440    900
		HD+                      1600    900
		
		SXGA                     1280    1024
		SXGA+                    1400    1050
		UXGA                     1600    1200
		WSXGA+                   1680    1050
		FHD                      1920    1080
		WUXGA                    1920    1200
		DCI2K                    2048    1080
		QWXGA                    2048    1152
		QXGA                     2048    1536
		UWFHD                    2560    1080
		QHD                      2560    1440
		WQXGA                    2560    1600
		QSXGA                    2560    2048
		QHD+                     3200    1800
		WQSXGA                   3200    2048
		QUXGA                    3200    2400
		UWQHD                    3440    1440
		UW4K                     3840    1600
		4KUHD                    3840    2160
		WQUXGA                   3840    2400
		DCI4K                    4096    2160
		UW5K                     5120    2160
		5K                       5120    2880
		8KUHD                    7680    4320
	)

	phones=(
		Google Nexus 6P          2560    1440
		Google Nexus 6           2560    1440
		Google Nexus 5X	         1920    1080
		Google Nexus 5           1920    1080
		Google Pixel 5           2340    1080
		Google Pixel 4 XL        3040    1440
		Google Pixel 4a          2340    1080
		Google Pixel 4           2280    1080
		Google Pixel 3a XL       2160    1080
		Google Pixel 3a	         2220    1080
		Google Pixel 3 XL        2960    1440
		Google Pixel 3           2160    1080
		Google Pixel 2 XL        2880    1440
		Google Pixel 2           1920    1080
		Google Pixel XL          2560    1440
		Google Pixel             1920    1080

		Samsung Galaxy Note 10+  3040    1440
		Samsung Galaxy Note 10   2280    1080
		Samsung Galaxy Note 9    2960    1440
		Samsung Galaxy Note 8    2960    1440
		Samsung Galaxy Note 7    2560    1440

		Samsung Galaxy S10+      3040    1440
		Samsung Galaxy S10       3040    1440
		Samsung Galaxy S9+       2960    1440
		Samsung Galaxy S9        2960    1440
		Samsung Galaxy S8+       2960    1440
		Samsung Galaxy S8        2960    1440
		Samsung Galaxy S7 Edge   2560    1440
		Samsung Galaxy S7        2560    1440
		Samsung Galaxy S6 Edge+  2560    1440
		Samsung Galaxy S6 Edge   2560    1440
		Samsung Galaxy S6        2560    1440
	)
	
	tablets=(
		Google Nexus 9           2048    1536
		Google Nexus 7 [ 2013 ]  1920    1200
		Google Pixel C           2560    1800

		Samsung Galaxy Tab S7+   2800    1752
		Samsung Galaxy Tab S7    2560    1600
		Samsung Galaxy Tab S6    2560    1600
		Samsung Galaxy Tab S5E   2560    1600
		)

	devices=(
		${phones[@]}
		${tablets[@]}
	)

	resolutions=(
		${monitors[@]}
		${devices[@]}
	)

	printf '\n'

	# set padding for uniform output

	pad_length=10

	# continue list using array selection of suppported values

	for (( i=0 ; i<${#resolutions[@]} ; i+=3 ))
	do
		format="${resolutions[$i]}"
		width="${resolutions[$i+1]}"
		height="${resolutions[$i+2]}"
		resolution="${width}x${height}"

		number=$((($i/3) + 1))

		if (( $i/3 >= 0 && $i/3 <= 8 ))
		then
				# handle number spacing for entries 1-9
				
				printf '\t[  %s ] %s' ${number} ${format}
		else
				# handle number spacing for entries 10+
				
				printf '\t[ %s ] %s' ${number} ${format}
		fi

		printf '%*s' $((pad_length - ${#format}))
		printf '%s\n' ${resolution}
	done
	
	printf '\n'
}

# show selection

print_resolutions

# values #

values_list=(
	selection
)

# manage user input for values_list

console_rtn=()

console.input ${values_list[@]}

eval ${console_rtn[@]}

# check selection input against selection list

while true
do
	# range #

	if [[ "${selection}" -lt 1 ]] || [[ "${selection}" -gt "${number}" ]]
	then
		echo
		console.err "Invalid selection:"
		console.wrn "Select a format ranging from [ 1 - ${number} ]"
		console.wrn "or type 'c' to enter a custom display format."
		echo
	
		console.ipt "Selection: "
		read selection
		echo
	else
		break
	fi
	
	# custom #
	
	if [[ "${selection}" != "c" ]]
	then
		echo
		console.err "Invalid selection:"
		console.wrn "Type 'c' to enter a custom display format"
		console.wrn "or select a format ranging from [ 1 - ${number} ]."
		echo
	
		console.ipt "Selection: "
		read selection
		echo
	else
		selection=custom
		
		break
	fi
	
done

# manage numerical selection

resolution=""

if [[ "${selection}" =~ ^[0-9]+$ ]]
then
	i=$((${selection}))
	i=$(($i*3))

	format="${resolutions[$i-3]}"
	width="${resolutions[$i-2]}"
	height="${resolutions[$i-1]}"
	resolution="${width}x${height}"
	
	GEOMETRY="${resolution}"

fi

# manage custom selection

if [[ "${selection}" = "custom" ]]
then
	format="Custom"

	console.inf "Setting custom resolution and port:"
	echo

	console.ipt "Enter WIDTH and HEIGHT (e.g. 1920 1080): "
	read width height
	echo

	console.ipt "Enter port NUMBER (e.g. 1): "
	read custom_port
	echo

	format="Custom"
	custom_resolution="${width}x${height}"

	DISPLAY=":${custom_port}"
	GEOMETRY="${custom_resolution}"
	PORT="590${DISPLAY:1}"
fi

# launch vnc display

vnc