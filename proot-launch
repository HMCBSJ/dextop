#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# usage #

if [[ $# -gt 3 ]]
then
	echo "Usage: ${0} | <username> | <application>"
	exit 1
fi

# variables #

script=$(basename -- "${BASH_SOURCE[0]}")

USERNAME=${1}
APPLICATION=${2}
PROOT_DIRECTORY=${3}
BIND_DIRECTORY=${4}

# set defaults

# variables written in upper case format
# represent environment defaults for the proot setup

BROWSER="surf"
COLORTERM="truecolor"
DESKTOP_SESSION="dwm"
DISPLAY=":1"
EDITOR="nano"
LANG="C.UTF-8"
LOCALHOST="127.0.0.1"
PAGER=
PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${PREFIX}/sbin:${PREFIX}/bin:/system/bin:/system/xbin"
PULSE_SERVER="${LOCALHOST}"
RUNNER="dmenu"
SHELL=
TERMINAL=
TMPDIR="/tmp"
VISUAL=
VNC=

# explicit VNC viewer application to kill
# used when vncserver is stopped or restarted using vnc:// intent
# when launched via the activity manager [ 'am start -d {URI} -S {APK}' ]

VNC="com.iiordanov.freebVNC/com.iiordanov.bVNC.RemoteCanvasActivity"
#VNC="com.realvnc.viewer.android/.app.DesktopActivity"

XAUTHORITY="${XDG_RUNTIME_DIR}/.Xauthority"

XDG_RUNTIME_DIR="/run/user/${USER_ID}"
XDG_CONFIG_HOME="${HOME}/.config"
XDG_CACHE_HOME="${HOME}/.cache"
XDG_DATA_HOME="${HOME}/.local/share"
XDG_DATA_DIRS="/usr/local/share:/usr/share"
XDG_CONFIG_DIRS="/etc/xdg"

# set defaults

[ -z "${PROOT_DIRECTORY}" ]	&& PROOT_DIRECTORY="${PREFIX%/*}/img"
[ -z "${BIND_DIRECTORY}" ]	&& BIND_DIRECTORY="${PREFIX%/*}/mnt"
[ -z "${FAKE_DIRECTORY}" ]	&& FAKE_DIRECTORY="${PREFIX%/*}/fake"

[ -z "${BROWSER}" ]			&& BROWSER="${BROWSER}"
[ -z "$COLORTERM" ]			&& COLORTERM="${COLORTERM}"
[ -z "$DESKTOP_SESSION" ]	&& DESKTOP_SESSION="${DESKTOP_SESSION}"
[ -z "${EDITOR}" ]			&& EDITOR="${EDITOR}"
[ -z "${PAGER}" ]			&& PAGER="${PAGER}"
[ -z "${RUNNER}" ]			&& RUNNER="${RUNNER}"
[ -z "${SHELL}" ]			&& SHELL="${SHELL}"
[ -z "${TERMINAL}" ]		&& TERMINAL="${TERM}"
[ -z "${VISUAL}" ]			&& VISUAL="${VISUAL}"

# assume termux-exec is present - unset LD_PRELOAD

unset LD_PRELOAD

# verify user existence: loop through proot /etc/passwd file
# make sure 'user' exists and corresponds to 'username'
# then source environment variables from file
# default to 'root' if 'username' is invalid or does not exist

last_entry="$(tail -n 1 "${PROOT_DIRECTORY}"/etc/passwd)"

while read -r entry
do
	IFS=':'

	read USER _ USER_ID GROUP_ID FULL_NAME HOME SHELL <<< "${entry}"

	FULL_NAME="${FULL_NAME%,,,}"

	# verify that 'username' matches parsed 'user' entry

	if [[ "${USERNAME}" == "${USER}" ]]
	then
		# break out of loop if user is found

		break
	fi

	# simulate EOF:
	# default entry used only if last line is reached

	if [[ "${entry}" == "${last_entry}" ]]
	then
		USER="root"
		USER_ID=0
		GROUP_ID=0
		FULL_NAME="root"
		HOME="/root"
		SHELL="/bin/bash"

		# login message warning

		console.err "User ${entry} does not exist:"
		console.err "Please verify user name input and try again."
		echo
		console.wrn "Entering as '${USER}'."
		echo

		console.wait 2
	fi

done < "${PROOT_DIRECTORY}"/etc/passwd

# reset IFS

IFS=' '

# welcome #

# console.clear

console.inf "Entering proot environment."
echo

if [ ! -z "${APPLICATION}" ]
then
	console.fwd "Starting application [ ${APPLICATION} ] [ ${USER} ]..."
	echo
else
	console.fwd "Starting session [ ${USER} ]..."
	echo
fi

console.wait 1

# proot #

# setup proot command arguments

command="proot"

command+=" --kill-on-exit"
command+=" --link2symlink"
command+=" -r ${PROOT_DIRECTORY}"
command+=" -i ${USER_ID}:${GROUP_ID}"
[ -d  "${PROOT_DIRECTORY}"/"${HOME}" ] && command+=" -w ${HOME}" || exit 1
command+=" -b /apex"
command+=" -b /data"
command+=" -b /dev"
command+=" -b /dev/urandom:/dev/urandom"
command+=" -b ${PREFIX%/*}/home:/home/termux"
command+=" -b /linkerconfig/ld.config.txt:/linkerconfig/ld.config.txt"
command+=" -b /proc"
command+=" -b /proc/self/fd:/dev/fd"
command+=" -b /proc/self/fd/0:/dev/stdin"
command+=" -b /proc/self/fd/1:/dev/stdout"
command+=" -b /proc/self/fd/2:/dev/stderr"
[ ! $(cat /proc/loadavg > /dev/null 2>&1) ] && command+=" -b ${PREFIX/*}/fake/loadavg:/proc/loadavg" || :
[ ! $(cat /proc/stat > /dev/null 2>&1) ] && command+=" -b ${PREFIX*/}/fake/stat:/proc/stat" || :
[ ! $(cat /proc/uptime > /dev/null 2>&1) ] && command+=" -b ${PREFIX*/}/fake/uptime:/proc/uptime" || :
[ ! $(cat /proc/version > /dev/null 2>&1) ] && command+=" -b ${PREFIX*/}/fake/version:/proc/version" || :
[ ! $(cat /proc/vmstat > /dev/null 2>&1) ] && command+=" -b ${PRREFIX*/}/fake/vmstat:/proc/vmstat" || :
command+=" -b /storage"
[ -d "${PREFIX%/*}"/storage/external ] && command+=" -b ${PREFIX%/*}/storage/external:/media/External" || :
[ -d "${PREFIX%/*}"/storage/internal ] && command+=" -b ${PREFIX%/*}/storage/internal:/media/Internal" || :
command+=" -b /sys"
command+=" -b /system"
command+=" -b /vendor"
command+=" env -i"
command+=" ANDROID_ART_ROOT=${ANDROID_ART_ROOT}"
command+=" ANDROID_DATA=${ANDROID_DATA}"
command+=" ANDROID_I18N_ROOT=${ANDROID_I18N_ROOT}"
command+=" ANDROID_ROOT=${ANDROID_ROOT}"
command+=" ANDROID_RUNTIME_ROOT=${ANDROID_RUNTIME_ROOT}"
command+=" ANDROID_TZDATA_ROOT=${ANDROID_TZDATA_ROOT}"
command+=" BOOTCLASSPATH=${BOOTCLASSPATH}"
command+=" COLORTERM=${COLORTERM}"
command+=" DEX2OATBOOTCLASSPATH=${DEX2OATBOOTCLASSPATH}"
command+=" PREFIX=${PREFIX}"
command+=" SETUP_DIRECTORY=${PREFIX%/*}"
command+=" BINARIES_DIRECTORY=${PREFIX}/bin"
command+=" LIBRARIES_DIRECTORY=${PREFIX}/lib"
command+=" PROOT_DIRECTORY=${PROOT_DIRECTORY}"
command+=" BIND_DIRECTORY=${BIND_DIRECTORY}"
command+=" APPLICATION=${APPLICATION}"
command+=" BROWSER=${BROWSER}"
command+=" DESKTOP_SESSION=${DESKTOP_SESSION}"
command+=" EDITOR=${EDITOR}"
command+=" DISPLAY=${DISPLAY}"
command+=" HOME=${HOME}"
command+=" LANG=${LANG}"
command+=" LOCALHOST=${LOCALHOST}"
command+=" PAGER=${PAGER}"
command+=" PATH=${PATH}"
command+=" PULSE_SERVER=${PULSE_SERVER}"
command+=" TERM=${TERMINAL}"
COMMAND+=" TMPDIR=${TMPDIR}"
command+=" USER=${USER}"
command+=" VISUAL=${VISUAL}"
command+=" VNC=${VNC}"
command+=" XDG_RUNTIME_DIR=/run/user/${USER_ID}"
command+=" XDG_CONFIG_HOME=${HOME}/.config"
command+=" XDG_CACHE_HOME=${HOME}/.cache"
command+=" XDG_DATA_HOME=${HOME}/.local/share"
command+=" XDG_DATA_DIRS=/usr/local/share:/usr/share"
command+=" XDG_CONFIG_DIRS=/etc/xdg"
command+=" XAUTHORITY=${XDG_RUNTIME_DIR}/.Xauthority"
command+=" ${SHELL} --login"

# execute proot

exec ${command}
